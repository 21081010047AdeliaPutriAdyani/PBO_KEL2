/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paypoint;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Timestamp;

/**
 *
 * @author Windows 10
 */
public class Penjualan extends javax.swing.JFrame {

    /**
     * Creates new form Penjualan
     */
    Connection conn = null;
    PreparedStatement stmt = null;
    Statement st = null;
    ResultSet rs = null;
    private int idUser;
    public Penjualan(int idUserInput) {
        initComponents();
        this.idUser=idUserInput;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/pbo_inven","root","");
            st = conn.createStatement();
            System.out.println("Berhasil Terkoneksi Database");
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Gagal Terhubung Ke Koneksi, karena "+ex);
        }
        select();
        showPelanggan();
        System.out.println(idUser);
    }
    
    //menampilkan
    public void select(){
        try {
        // Mengatur query untuk mengambil data barang
        String query = "SELECT id_barang, kode_barang, nama_barang, harga_barang, stok_barang FROM manajemen";
        stmt = conn.prepareStatement(query);
        
        // Mengeksekusi query dan mendapatkan hasilnya
        rs = stmt.executeQuery();
        
        // Mengatur model tabel
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id Barang");
        model.addColumn("Kode");
        model.addColumn("Nama Barang");
        model.addColumn("Harga");
        model.addColumn("Stok");
        
        // Menambahkan data barang ke dalam model
        while (rs.next()) {
            String id_barang = rs.getString("id_barang");
            String kode = rs.getString("kode_barang");
            String namaBarang = rs.getString("nama_barang");
            String harga = rs.getString("harga_barang");
            String stok = rs.getString("stok_barang");
            
            model.addRow(new Object[] {id_barang, kode, namaBarang, harga, stok});
        }
        
        // Mengatur model tabel pada tabelCari
        tableCari.setModel(model);
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }
    
    public void showPelanggan(){
        try {
        // Mengatur query untuk mengambil data barang
        String query = "SELECT id_pelanggan, nama_pelanggan, noTelp_pelanggan, alamat_pelanggan FROM pelanggan";
        stmt = conn.prepareStatement(query);
        
        // Mengeksekusi query dan mendapatkan hasilnya
        rs = stmt.executeQuery();
        
        // Mengatur model tabel
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("NAMA");
        model.addColumn("NO_HP");
        model.addColumn("ALAMAT");
        
        // Menambahkan data barang ke dalam model
        while (rs.next()) {
            String id = rs.getString("id_pelanggan");
            String nama = rs.getString("nama_pelanggan");
            String no_hp = rs.getString("noTelp_pelanggan");
            String alamat = rs.getString("alamat_pelanggan");
            
            model.addRow(new Object[] {id, nama, no_hp, alamat});
        }
        
        // Mengatur model tabel pada tabelCari
        tablePelanggan.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
        } 
    }
    
    public void setTotalHarga(){
        DefaultTableModel model = (DefaultTableModel) tableTransaksi.getModel();
        // Menghitung total harga
        double totalHarga = 0;
        for (int row = 0; row < model.getRowCount(); row++) {
            double total = Double.parseDouble(model.getValueAt(row, 5).toString());
            totalHarga += total;
        }

        // Menampilkan total harga di bidang teks
        totalHargaTextField.setText(String.valueOf(totalHarga));
    }
    
    //
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPencarian = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        buttonPelanggan = new javax.swing.JButton();
        buttonManajemenBarang = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        buttonHapus = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        barangKode = new javax.swing.JTextField();
        buttonTambah = new javax.swing.JButton();
        barangNama = new javax.swing.JTextField();
        barangHarga = new javax.swing.JTextField();
        barangJumlah = new javax.swing.JTextField();
        barangTotal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buttonEdit = new javax.swing.JButton();
        barangId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTransaksi = new javax.swing.JTable();
        judul = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCari = new javax.swing.JTable();
        totalHargaTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        memberId = new javax.swing.JTextField();
        buttonBayar = new javax.swing.JButton();
        memberNama = new javax.swing.JTextField();
        memberNoTelp = new javax.swing.JTextField();
        memberAlamat = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablePelanggan = new javax.swing.JTable();
        buttonMemberInput = new javax.swing.JButton();
        buttonMemberBatal = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("TRANSAKSI PENJUALAN");

        buttonPelanggan.setText("Pelanggan");
        buttonPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPelangganActionPerformed(evt);
            }
        });

        buttonManajemenBarang.setText("Manajemen Barang");
        buttonManajemenBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonManajemenBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPencarianLayout = new javax.swing.GroupLayout(panelPencarian);
        panelPencarian.setLayout(panelPencarianLayout);
        panelPencarianLayout.setHorizontalGroup(
            panelPencarianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPencarianLayout.createSequentialGroup()
                .addComponent(buttonPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(228, 228, 228)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonManajemenBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelPencarianLayout.setVerticalGroup(
            panelPencarianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPencarianLayout.createSequentialGroup()
                .addGroup(panelPencarianLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(buttonPelanggan)
                    .addComponent(buttonManajemenBarang))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel2.setText("Jumlah");

        buttonHapus.setText("Hapus");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        jLabel3.setText("Total");

        barangKode.setEditable(false);

        buttonTambah.setText("Tambah");
        buttonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahActionPerformed(evt);
            }
        });

        barangNama.setEditable(false);

        barangHarga.setEditable(false);

        barangJumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                barangJumlahKeyReleased(evt);
            }
        });

        barangTotal.setEditable(false);

        jLabel1.setText("Kode");

        buttonEdit.setText("Edit");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        barangId.setEditable(false);
        barangId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barangIdActionPerformed(evt);
            }
        });

        jLabel8.setText("ID");

        jLabel9.setText("Nama Barang");

        jLabel10.setText("Harga");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel1)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(barangId, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(barangKode, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(barangNama, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(81, 81, 81)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(barangHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(barangJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(barangTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barangNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barangKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barangHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barangJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barangTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barangId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonHapus)
                    .addComponent(buttonEdit)
                    .addComponent(buttonTambah)))
        );

        tableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Barang", "Kode", "Nama Barang", "Harga", "Jumlah", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableTransaksi);

        judul.setText("TRANSAKSI PENJUALAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(judul)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(judul)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableCari.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Barang", "Kode", "Nama Barang", "Harga", "Stok"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCariMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableCari);

        totalHargaTextField.setEditable(false);
        totalHargaTextField.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel7.setText("Member :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Detail Transaksi : ");

        memberId.setEditable(false);
        memberId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberIdActionPerformed(evt);
            }
        });

        buttonBayar.setText("Bayar");
        buttonBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBayarActionPerformed(evt);
            }
        });

        memberNama.setEditable(false);

        memberNoTelp.setEditable(false);

        memberAlamat.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(memberNama)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(memberId)))
                        .addGap(17, 17, 17)
                        .addComponent(memberNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(memberAlamat)
                    .addComponent(totalHargaTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(buttonBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(memberId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(memberNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memberNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addComponent(memberAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalHargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(buttonBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        tablePelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NAMA", "NO_TELP", "ALAMAT"
            }
        ));
        jScrollPane3.setViewportView(tablePelanggan);

        buttonMemberInput.setText("Input Member");
        buttonMemberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMemberInputActionPerformed(evt);
            }
        });

        buttonMemberBatal.setText("Batal Input Member");
        buttonMemberBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMemberBatalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(buttonMemberBatal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonMemberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonMemberInput)
                    .addComponent(buttonMemberBatal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jButton1.setText("Keluar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelPencarian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton1))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahActionPerformed
            // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableTransaksi.getModel();

        String kodeBarang = barangKode.getText();

    // Periksa apakah kode barang sudah ada dalam tabel
        for (int row = 0; row < tableTransaksi.getRowCount(); row++) {
            String kode = tableTransaksi.getValueAt(row, 1).toString();
            if (kode.equals(kodeBarang)) {
                JOptionPane.showMessageDialog(this, "Barang sudah ada dalam daftar transaksi.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        
        String id = barangId.getText();
        String kode = barangKode.getText();
        String nama = barangNama.getText();
        String harga = barangHarga.getText();
        String jumlah = barangJumlah.getText();
        String total = barangTotal.getText();
        if (id.isEmpty()||kode.isEmpty() || nama.isEmpty() || harga.isEmpty() || jumlah.isEmpty() || total.isEmpty() ) {
            buttonTambah.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Lengkapi semua field terlebih dahulu", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedRow = tableCari.getSelectedRow();
        int barangJumlahInt = Integer.parseInt(jumlah);
        int tableCariJumlah = Integer.parseInt(tableCari.getValueAt(selectedRow, 4).toString());
        if(barangJumlahInt > tableCariJumlah ){
            JOptionPane.showMessageDialog(this, "Stok Barang Tinggal "+tableCariJumlah +".", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        

        Object[] rowData = {id,kode, nama, harga, jumlah, total};
        model.addRow(rowData);

        tableTransaksi.setModel(model);
        barangId.setText("");
        barangKode.setText("");
        barangNama.setText("");
        barangHarga.setText("");
        barangJumlah.setText("");
        barangTotal.setText("");
        setTotalHarga();
        tableCari.clearSelection();
        tableTransaksi.clearSelection();
    }//GEN-LAST:event_buttonTambahActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableTransaksi.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String id = tableTransaksi.getValueAt(selectedRow, 0).toString();
        String kode = tableTransaksi.getValueAt(selectedRow, 1).toString();
        String nama = tableTransaksi.getValueAt(selectedRow, 2).toString();
        String harga = tableTransaksi.getValueAt(selectedRow, 3).toString();
        String jumlah = tableTransaksi.getValueAt(selectedRow, 4).toString();
        String total = tableTransaksi.getValueAt(selectedRow, 5).toString();

        barangId.setText(id);
        barangKode.setText(kode);
        barangNama.setText(nama);
        barangHarga.setText(harga);
        barangJumlah.setText(jumlah);
        barangTotal.setText(total);

        DefaultTableModel model = (DefaultTableModel) tableTransaksi.getModel();
        model.removeRow(selectedRow);
        barangId.setText("");
        barangKode.setText("");
        barangNama.setText("");
        barangHarga.setText("");
        barangJumlah.setText("");
        barangTotal.setText("");
        setTotalHarga();
        tableTransaksi.clearSelection();
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void tableCariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCariMouseClicked
        // TODO add your handling code here:
        int row = tableCari.getSelectedRow();
        barangId.setText(tableCari.getValueAt(row, 0).toString());
        barangKode.setText(tableCari.getValueAt(row, 1).toString());
        barangNama.setText(tableCari.getValueAt(row, 2).toString());
        barangHarga.setText(tableCari.getValueAt(row, 3).toString());
        barangJumlah.setText("0");
        barangTotal.setText("0");
        buttonTambah.setEnabled(true);
        buttonEdit.setEnabled(false);
        buttonHapus.setEnabled(false);
    }//GEN-LAST:event_tableCariMouseClicked

    private void barangJumlahKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barangJumlahKeyReleased
        // TODO add your handling code here:
        String jumlahString = barangJumlah.getText();
        
        // Mengubah string menjadi integer
        int jumlah = 0;
        if (!jumlahString.isEmpty()) {
            jumlah = Integer.parseInt(jumlahString);
        }
        
        // Mendapatkan nilai dari field barangHarga
        String hargaString = barangHarga.getText();
        
        // Mengubah string menjadi integer
        float harga = 0;
        if (!hargaString.isEmpty()) {
            harga = Float.parseFloat(hargaString);
        }
        
        // Menghitung total
        float total = harga * jumlah;
        
        // Menampilkan hasil di field barangTotal
        barangTotal.setText(Float.toString(total));
    }//GEN-LAST:event_barangJumlahKeyReleased

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:
         int selectedRow = tableTransaksi.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Ambil nilai dari baris yang dipilih
        String idBarang = barangId.getText();
        String kodeBarang = barangKode.getText();
        String namaBarang = barangNama.getText();
        String hargaBarang = barangHarga.getText();
        String jumlahBarang = barangJumlah.getText();
        String totalBarang = barangTotal.getText();
        if (idBarang.isEmpty() || kodeBarang.isEmpty() || namaBarang.isEmpty() || hargaBarang.isEmpty() || jumlahBarang.isEmpty() || totalBarang.isEmpty()) {
            buttonTambah.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Pilih Barang di Transaksi dulu!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for (int row = 0; row < tableCari.getRowCount(); row++) {
            String id = tableCari.getValueAt(row, 0).toString();
            if (id.equals(idBarang)) {
                int barangJumlahInt = Integer.parseInt(jumlahBarang);
                int tableCariJumlah = Integer.parseInt(tableCari.getValueAt(row, 4).toString());
                if(barangJumlahInt > tableCariJumlah ){
                    JOptionPane.showMessageDialog(this, "Stok Barang Tinggal "+tableCariJumlah +".", "Peringatan", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
        }
        
        
        
        tableTransaksi.setValueAt(idBarang, selectedRow, 0);
        tableTransaksi.setValueAt(kodeBarang, selectedRow, 1);
        tableTransaksi.setValueAt(namaBarang, selectedRow, 2);
        tableTransaksi.setValueAt(hargaBarang, selectedRow, 3);
        tableTransaksi.setValueAt(jumlahBarang, selectedRow, 4);
        tableTransaksi.setValueAt(totalBarang, selectedRow, 5);

        // Reset field input
        barangId.setText("");
        barangKode.setText("");
        barangNama.setText("");
        barangHarga.setText("");
        barangJumlah.setText("");
        barangTotal.setText("");
        tableTransaksi.clearSelection();
        setTotalHarga();
    }//GEN-LAST:event_buttonEditActionPerformed

    private void tableTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTransaksiMouseClicked
        // TODO add your handling code here:
        int row = tableTransaksi.getSelectedRow();
        barangId.setText(tableTransaksi.getValueAt(row, 0).toString());
        barangKode.setText(tableTransaksi.getValueAt(row, 1).toString());
        barangNama.setText(tableTransaksi.getValueAt(row, 2).toString());
        barangHarga.setText(tableTransaksi.getValueAt(row, 3).toString());
        barangJumlah.setText(tableTransaksi.getValueAt(row, 4).toString());
        barangTotal.setText(tableTransaksi.getValueAt(row, 5).toString());
        buttonTambah.setEnabled(false);
        buttonEdit.setEnabled(true);
        buttonHapus.setEnabled(true);
       
    }//GEN-LAST:event_tableTransaksiMouseClicked

    private void memberIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memberIdActionPerformed

    private void buttonBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBayarActionPerformed
        LocalDateTime currentDateTime = LocalDateTime.now();
        Timestamp timestamp = Timestamp.valueOf(currentDateTime);
        
        int idTransaksi = 0;
        String query = "INSERT INTO transaksi (id_pelanggan, id_user, TANGGAL_TRANSAKSI) VALUES (?, ?, ?)";
         try {
            PreparedStatement statementTransaksi = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
            if(memberId.getText().isEmpty()){
                statementTransaksi.setNull(1, java.sql.Types.INTEGER);
            }else{
                int idPelanggan = Integer.parseInt(memberId.getText().toString());
                statementTransaksi.setInt(1, idPelanggan);
            }
            statementTransaksi.setInt(2, this.idUser);
            statementTransaksi.setTimestamp(3, timestamp);
            System.out.println("sukses insert.");
            int rowsInsertedTransaksi = statementTransaksi.executeUpdate();

            if (rowsInsertedTransaksi > 0) {
                ResultSet generatedKeys = statementTransaksi.getGeneratedKeys();
                if (generatedKeys.next()) {
                    idTransaksi = generatedKeys.getInt(1);
                    System.out.println(idTransaksi);
                }
            }
        } catch (SQLException ex) {
            System.out.println("gagal insert.");
            Logger.getLogger(manajemen.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        int rowCount = tableTransaksi.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            int id = Integer.parseInt(tableTransaksi.getValueAt(i, 0).toString());
            String namaBarang = tableTransaksi.getValueAt(i, 2).toString();
            double harga = Double.parseDouble(tableTransaksi.getValueAt(i, 3).toString());
            int jumlah = Integer.parseInt(tableTransaksi.getValueAt(i, 4).toString());
            double total = Double.parseDouble(tableTransaksi.getValueAt(i, 5).toString());
            String sqlTransaksiItem = "INSERT INTO transaksi_item (id_transaksi, id_barang, jumlah, harga) VALUES (?, ?, ?, ?)";
            PreparedStatement statementTransaksiItem;
            String sqlUpdateBarang = "UPDATE manajemen SET STOK_BARANG = STOK_BARANG - ? WHERE id_barang = ?";
            try {
                statementTransaksiItem = conn.prepareStatement(sqlTransaksiItem);
                statementTransaksiItem.setInt(1,idTransaksi );
                statementTransaksiItem.setInt(2, id);
                statementTransaksiItem.setInt(3, jumlah);
                statementTransaksiItem.setDouble(4, total);

                statementTransaksiItem.executeUpdate();
                PreparedStatement statementUpdateBarang = conn.prepareStatement(sqlUpdateBarang);
                statementUpdateBarang.setInt(1, jumlah);
                statementUpdateBarang.setInt(2, id);
                statementUpdateBarang.executeUpdate();

                System.out.println(id + namaBarang);
                
            } catch (SQLException ex) {
                System.out.println("Gagal");
                Logger.getLogger(Penjualan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        select();
        DefaultTableModel model = (DefaultTableModel) tableTransaksi.getModel();
        model.setRowCount(0);
        memberId.setText("");
        memberNama.setText("");
        memberNoTelp.setText("");
        memberAlamat.setText("");
        tablePelanggan.clearSelection();

        
        
    }//GEN-LAST:event_buttonBayarActionPerformed

    private void buttonMemberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMemberInputActionPerformed
        int selectedRow = tablePelanggan.getSelectedRow();

    // Memeriksa apakah ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris dalam tabel terlebih dahulu", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mendapatkan nilai dari kolom-kolom pada baris yang dipilih
        String id = tablePelanggan.getValueAt(selectedRow, 0).toString();
        String nama = tablePelanggan.getValueAt(selectedRow, 1).toString();
        String no_telp = tablePelanggan.getValueAt(selectedRow, 2).toString();
        String alamat = tablePelanggan.getValueAt(selectedRow, 3).toString();
        
        memberId.setText(id);
        memberNama.setText(nama);
        memberNoTelp.setText(no_telp);
        memberAlamat.setText(alamat);  
        tablePelanggan.clearSelection();
        
    }//GEN-LAST:event_buttonMemberInputActionPerformed

    private void buttonMemberBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMemberBatalActionPerformed
        // TODO add your handling code here:
        memberId.setText("");
        memberNama.setText("");
        memberNoTelp.setText("");
        memberAlamat.setText("");
        tablePelanggan.clearSelection();

    }//GEN-LAST:event_buttonMemberBatalActionPerformed

    private void buttonPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPelangganActionPerformed
        this.setVisible(false);
        new framePelanggan().setVisible(true);
    }//GEN-LAST:event_buttonPelangganActionPerformed

    private void buttonManajemenBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonManajemenBarangActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new JFrame_manajemen().setVisible(true);
    }//GEN-LAST:event_buttonManajemenBarangActionPerformed

    private void barangIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barangIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barangIdActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                String idUser = args[0]; // Get the idUser from command line arguments
//                new Penjualan(idUser).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barangHarga;
    private javax.swing.JTextField barangId;
    private javax.swing.JTextField barangJumlah;
    private javax.swing.JTextField barangKode;
    private javax.swing.JTextField barangNama;
    private javax.swing.JTextField barangTotal;
    private javax.swing.JButton buttonBayar;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonManajemenBarang;
    private javax.swing.JButton buttonMemberBatal;
    private javax.swing.JButton buttonMemberInput;
    private javax.swing.JButton buttonPelanggan;
    private javax.swing.JButton buttonTambah;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel judul;
    private javax.swing.JTextField memberAlamat;
    private javax.swing.JTextField memberId;
    private javax.swing.JTextField memberNama;
    private javax.swing.JTextField memberNoTelp;
    private javax.swing.JPanel panelPencarian;
    private javax.swing.JTable tableCari;
    private javax.swing.JTable tablePelanggan;
    private javax.swing.JTable tableTransaksi;
    private javax.swing.JTextField totalHargaTextField;
    // End of variables declaration//GEN-END:variables
}
